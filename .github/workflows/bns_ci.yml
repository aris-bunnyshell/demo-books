name: Bunnyshell CI
on:
  push:
    branches:
      - master
jobs:
  deploy:
    name: Deploy CI environment
    runs-on: ubuntu-latest
    steps:
    - name: Prepare vars
      run: |-
        echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> "$GITHUB_ENV"
        echo "BNS_ENV_NAME=CI ${GITHUB_RUN_ID}" >> "$GITHUB_ENV"
    - name: Check out the repo
      uses: actions/checkout@v2
    - name: Get Kubernetes integration
      uses: addnab/docker-run-action@v3
      with:
        image: bunnyshell/cli:latest
        options: -v ${{ github.env }}:/github/envs.txt
        run: |-
          echo "CLUSTER_ID=`bns k8s-clusters list --token ${{ secrets.BUNNYSHELL_ACCESS_TOKEN }} --organization ${{ vars.BUNNYSHELL_ORGANIZATION_ID }} --non-interactive -o json | jq -r '._embedded.item[0].id'`" >> /github/envs.txt
    - name: Create Environment
      uses: addnab/docker-run-action@v3
      with:
        image: bunnyshell/cli:latest
        options: -v ${{ github.workspace }}:/work -v ${{ github.env }}:/github/envs.txt
        run: |-
          DEPLOY_OUTPUT=`bns environments create --name "${{ env.BNS_ENV_NAME }}" --from-path /work/_bunnyshell/env.yaml --k8s "${{ env.CLUSTER_ID }}" --deploy --no-progress --token ${{ secrets.BUNNYSHELL_ACCESS_TOKEN }} --project ${{ vars.BUNNYSHELL_PROJECT_ID }} --non-interactive -o json`
          echo "BNS_ENV_ID=`echo \"$DEPLOY_OUTPUT\" | jq -r '.[0].environment'`" >> /github/envs.txt
          echo "API_ENDPOINT=`echo \"$DEPLOY_OUTPUT\" | jq -r '.[] | select(.name == \"backend\") | .endpoints[0]'`" >> /github/envs.txt
  test:
    name: Run E2E tests
    runs-on: ubuntu-latest
    needs: deploy
    continue-on-error: true
    steps:
    - name: API tests
      run: |-
        env
        echo "Running API tests on ${{ env.BNS_ENV_NAME }}..."
  cleanup:
    name: Delete CI environment
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Deleting Environment
        uses: addnab/docker-run-action@v3
        with:
          image: bunnyshell/cli:latest
          run: |-
            env
            echo "DELETE env"
            # bns environments delete --id "${{env.BNS_ENV_NAME}}" --token ${{ secrets.BUNNYSHELL_ACCESS_TOKEN }} --non-interactive
        
